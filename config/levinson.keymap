/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

//Layer definitions
#define QWERTY 0
#define VIKEYS 1 
#define LOWER 2
#define RAISE 3
#define ADJ 4

/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty {
//  --------------------------------------------------------   -------------------------------------------------------------------------
// | TAB               | Q     | W    | E    | R     | T    | | Y     | U     | I           | O           | P          | BSPC           |
// | LCTRL / ESC       | A     | S    | D    | F     | G    | | H     | J     | K           | L           | VIKEYS / ; | '              |
// | LSHFT             | Z     | X    | C    | V     | B    | | N     | M     | ,           | .           | /          | RSHIFT / ENTER |
// | LCTRL+LSHFT+LGUI  | LCTRL | LALT | LGUI | LOWER | BSPC | | SPACE | RAISE | RGUI / LEFT | RALT / DOWN | RCTRL / UP | RIGHT          |
//  --------------------------------------------------------   -------------------------------------------------------------------------
            bindings = <
    &kp TAB           &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I            &kp O            &kp P              &kp BSPC  
    &mt LCTRL ESC     &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K            &kp L            &lt VIKEYS SEMI    &kp SQT   
    &kp LSHFT         &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA        &kp DOT          &kp FSLH           &mt RSHIFT ENTER 
    &kp LS(LC(LGUI))  &kp LCTRL   &kp LALT    &kp LGUI    &mo LOWER   &kp BSPC    &kp SPACE   &mo RAISE   &mt RGUI LEFT    &mt RALT DOWN    &mt RCTRL UP       &kp RIGHT
            >;
        };

       vikeys {
//  -----------------------------------     ---------------------------------------
// |     |     |     |     |     |     |   |      |      |     |       |     |     |
// |     |     |     |     |     |     |   | LEFT | DOWN | UP  | RIGHT |     |     |
// |     |     |     |     |     |     |   |      |      |     |       |     |     |
// |     |     |     |     |     |     |   |      |      |     |       |     |     |
//  -----------------------------------     ---------------------------------------
            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
    &trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
    &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
    &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
            >;
        }; 

        lower {
// -------------------------------------   -------------------------------------
// |  ~  |  !  |  @  |  #  |  $  |  %  |   |  ^    |  &  |  *  |  (  |  )  | BSPC|
// | DEL |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6   |  _  |  +  |  {  |  }  |  |  |
// |     |  F7 |  F8 |  F9 | F10 | F11 |   | F12   |     |     | HOME| END |     |
// |     |     |     |     |     |     |   | ENTER | ADJ | NEXT| Vol-| Vol+| PLAY|
// -------------------------------------   -------------------------------------
            bindings = <
    &kp TILDE       &kp EXCL    &kp AT      &kp HASH    &kp DOLLAR  &kp PERCENT &kp CARET   &kp AMPS            &kp STAR            &kp LPAR        &kp RPAR        &kp BSPC  
    &kp DEL         &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6      &kp UNDER           &kp PLUS            &kp LBRC        &kp RBRC        &kp PIPE   
    &trans          &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12     &trans              &trans              &kp HOME        &kp END         &trans
    &trans          &trans      &trans      &trans      &trans      &trans      &kp ENTER   &mo ADJ             &kp C_NEXT          &kp C_VOL_DN    &kp C_VOL_UP    &kp C_PLAY_PAUSE
            >;
        };

        raise {
// -------------------------------------   -------------------------------------
// |  `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC|
// | DEL |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  -  |  =  |  [  |  ]  |   \ |
// |     |  F7 |  F8 |  F9 | F10 | F11 |   | F12 |     |     |     |     |     |
// |     |     |     |     | ADJ | DEL |   |     |     | NEXT| Vol-| Vol+| PLAY|
// -------------------------------------   -------------------------------------
            bindings = <
    &kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7          &kp N8          &kp N9          &kp N0          &kp BSPC  
    &kp DEL     &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6      &kp MINUS       &kp EQUAL       &kp LBKT        &kp RBKT        &kp BSLH   
    &trans      &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12     &trans          &trans          &trans          &trans          &trans
    &trans      &trans      &trans      &trans      &mo ADJ     &kp DEL     &trans      &trans          &kp C_NEXT      &kp C_VOL_DN    &kp C_VOL_UP    &kp C_PLAY_PAUSE
            >;
        };

       adjust {
//  ------------------------------------    ----------------------------------------
// | RESET | BT1 | BT2 | BT3 |    |     |  | BT PREV | BT NEXT | | | BT CLEAR | DEL |
// |       |     |     |     |    |     |  |         |         | | |          |     |
// |       |     |     |     |    |     |  |         |         | | |          |     |
// |       |     |     |     |    |     |  |         |         | | |          |     |
//  ------------------------------------    ----------------------------------------
            bindings = <
    &bootloader  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &trans  &trans      &bt BT_PRV  &bt BT_NXT  &trans  &trans  &trans  &kp DEL
    &trans       &trans       &trans       &trans        &trans  &trans      &trans      &trans      &trans  &trans  &trans  &trans
    &trans       &trans       &trans       &trans        &trans  &trans      &trans      &trans      &trans  &trans  &trans  &trans
    &trans       &trans       &trans       &trans        &trans  &trans      &trans      &trans      &trans  &trans  &trans  &trans
            >;
        }; 
    };
};
